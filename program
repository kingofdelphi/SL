function mod(a, b) {
    return a - (a / b) * b
}

function gcd(a, b) {
    if (mod(a, b) == 0) {
        return b
    } else {
        return gcd(b, mod(a, b))
    }
    mod(23, 5)
}

function main() {
    4 * 8
    def a, pow, b
    a = 3
    pow = 1
    if (a = b = 1 <= 1.1) {
        a = a * 3
        if (a < 10) {
            def hacker
            hacker = 23
        }
        for (a=1;a<=3; a = a + 1) pow = pow * 3
        def x, y, z
        x = 3
        z = 12
        y = 3
    }
    def y, s, i
    y = 2, pow = "hack", s = "buck"
    looper()
    for (i = 0; i <= 10; i = i + 1) {
        print("fibonacci ", i, " = ", fibon(i), "\n")
    }
}

function fibon(n) {
    if (n == 0 || n == 1) {
        return 1
    } else {
        return fibon(n - 2) + fibon(n - 1)
    }
}

function factorial(x) {
    if (x == 0) {
        return 1
    } else {
        return x * factorial(x - 1)
    }
}

function looper() {
    def a
    a = 3
    for (a = 1; a <= 10; a = a + 1) {
        print("factorial ", factorial(a), " ")
        print("fibon ", fibon(a), "\n")
    }
}

function isprime(n) {
    if (n < 2) {
        return 0
    }
    if (n == 2) {
        return 1
    }
    if (mod(n, 2) == 0) {
        return 0
    } else {
        def i
        for (i = 3; i * i <= n; i = i + 2) {
            if (mod(n, i) == 0) {
                return 0
            }
        }
        return 1
    }
}

function primes() {
    def i
    for (i = 1; i <= 100; i = i + 1) {
        if (isprime(i)) print(i, "\n")
    }
}

looper()
primes()

function return() {

}

function flag() {
    function half(h, reverse) {
        def i, s
        s = ""
        for (i = 1; i <= h; i = i + 1) {
            def j, max
            if (reverse) max = h - i + 1
            else max = i
            for (j = 1; j <= max; j = j + 1) s = s + "*"
            s = s + "\n"
        }
        return s
    }
    def c, i, height
    height = 15
    for (c = 1; c <= 2; c = c + 1) {
        print(half(height / 2, 0, "ducking duss garbage"))
        print(half(height / 2 - 1, 1, ""))
    }
}

flag()
main()

function hak(b) {
}

def a
a = "ok"

print("all right\n", a + "\n")
def a, x


def b

b = ["*"]

print(b[0] + "\n")

for (a = 1; a < 5; a = a + 1) {
    b = b + [b[a - 1] + "*"]
    print(b[a] + "\n")
}

for (a = 4; a >= 0; a = a - 1) {
    print(b[a] + "\n")
}

function printr(a) {
    def i
    print("[")
    for (i = 0; i < len(a); i = i + 1) {
        if (i > 0) print(", ")
        if (typeof(a[i]) == "list") printr(a[i]) 
        else print(a[i])
    }
    print("]")
}

function flat(a) {
    printr(a)
    print("\n")
}

def a
a = [1, 2, [3, 4, [6, 7, 8], 9], 2]
[1, 2][0] = 3
flat(a)
a[2] = [3, 4]
flat(a)

a = 1, 2

x = a = [[1,2], [3,4], [23.02, "myself "], 4, [8, 32], 16]
flat(x)

flat(x[0])
x[0] = 5
flat(a)

print(a[1][0], a[2][1], " in\n")

function sorter(a) {
    def N
    N = len(a)
    def i
    for (i = 0; i < N; i = i + 1) {
        def j, m
        m = i
        for (j = i + 1; j < N; j = j + 1) {
            if (a[j] < a[m]) m = j
        }
        def tmp
        tmp = [a[m], a[i]]
        a[i] = tmp[0], a[m] = tmp[1]
        flat(a)
    }
    flat(a)
}

sorter(["e", "d", "c", "b", "a"])
def a
a = [1, 2]
def tmp
tmp = [a[0], a[1]]
tmp[0] = 5
flat(a)
flat(tmp)
